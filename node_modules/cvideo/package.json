{
  "name": "cvideo",
  "version": "0.0.1",
  "description": "Demo para Barcamp, implementaciÃ³n del original trabajo de @rauchg para #nodefest",
  "dependencies": {
    "rsvp-that-works": "~1.2.0",
    "fluent-ffmpeg": "~1.3.3",
    "shelljs": "~0.1.2",
    "chokidar": "~0.6.2"
  },
  "main": "./index.js",
  "devDependencies": {
    "express": "~3.1.1",
    "longjohn": "~0.2.0",
    "grunt": "~0.4.1",
    "grunt-esmangle": "~0.2.1"
  },
  "readme": "# A simple demo of node.js with canvas to video\nA simple demo of node.js with canvas to video using WebSockets and Node.js\n\n\n# Installation\n\n    > git clone git://github.com/alejandromg/nvideo.git\n    > cd nvideo\n    > make dirs && make\n    # If the setup is ok:\n    > node server\n\n# Api\n`server.js`:\n\n``` \nvar nvideo = require('./nvideo')\nnvideo(server /*, path to ws server */)\n\n```\n\n`index.html`\n\n```\n... html ...\n<script src=\"/socket.io/socket.io.js\"></script>\n<script src=\"/nvideo/nvideo.client.js\"></script>\n<script>\n  var converter = Converter.init('/video') // ws server\n\n  converter.emit('line', [px, py])\n  converter.emit('path', [px, py]) /*etc*/\n\n  // when you are done:\n  converter.process(function(error, status){\n    // status => :url\n  })\n\n</script>\n```\n# To come:\n\nA really deep implementation of this demo for using with a textarea and record every keyStroke with sound if it's posible, stay tune.\n\n# Contribution\n\n- [Alejandro Morales](http://github.com/alejadromg)\n- [Guillermo Rauch](http://github.com/rauchg)\n\n",
  "readmeFilename": "README.md",
  "_id": "cvideo@0.0.1",
  "dist": {
    "shasum": "927c871928146a8a0a50828d42b847e47d5fe094"
  },
  "_resolved": "/home/alejandro/Documents/nvideo/cvideo-0.0.1.tgz",
  "_from": "/home/alejandro/Documents/nvideo/cvideo-0.0.1.tgz"
}
